{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\shaii\\\\Desktop\\\\projects\\\\MrC\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\shaii\\\\Desktop\\\\projects\\\\MrC\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\shaii\\\\Desktop\\\\projects\\\\MrC\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\shaii\\\\Desktop\\\\projects\\\\MrC\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shaii\\\\Desktop\\\\projects\\\\MrC\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shaii\\\\Desktop\\\\projects\\\\MrC\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\shaii\\\\Desktop\\\\projects\\\\MrC\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\shaii\\\\Desktop\\\\projects\\\\MrC\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\shaii\\\\Desktop\\\\projects\\\\MrC\\\\src\\\\components\\\\ShowPatientMrc.js\";\nimport React, { Component, useState } from 'react';\nimport Foother from './Footer';\nimport Header from './Header';\nimport Mrc from './Mrc';\nimport IconUpload from '../images/icon_upload.png';\nimport Error from './Error';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport './ShowPatientMrc.css';\nimport Encription from '../Encription';\nimport { loadState, saveToLocalStorage } from '../storage';\nimport { loadWeb3, loadBlockchainData } from '../loadBlockchain';\n\nvar ShowPatientMrc = /*#__PURE__*/function (_Component) {\n  _inherits(ShowPatientMrc, _Component);\n\n  _createClass(ShowPatientMrc, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var oldState, blockchain;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(this.state);\n                oldState = loadState();\n                this.setState({\n                  patientAccount: oldState.patientAccount\n                }); // loading blockchain \n\n                _context.next = 5;\n                return loadWeb3();\n\n              case 5:\n                _context.next = 7;\n                return loadBlockchainData();\n\n              case 7:\n                blockchain = _context.sent;\n\n                if (!(blockchain !== undefined || blockchain !== null)) {\n                  _context.next = 16;\n                  break;\n                }\n\n                this.permissions = blockchain.permissions; // save smart contruct\n\n                this.setState({\n                  showAddKey: true,\n                  loading: false\n                });\n                saveToLocalStorage(this.state); // save to the storage\n\n                this.setState(loadState()); // load old state\n\n                _context.next = 15;\n                return this.loadingMrC();\n\n              case 15:\n                saveToLocalStorage(this.state); // save to the storage\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"loadingMrC\",\n    value: function () {\n      var _loadingMrC = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var mrc;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // get the mrc of this patient\n                this.setState({\n                  loading: true\n                });\n                _context2.next = 3;\n                return this.state.permissions.methods.getMrc(this.state.patientAccount).call({\n                  from: this.state.account\n                });\n\n              case 3:\n                mrc = _context2.sent;\n                this.setState({\n                  mrc: mrc\n                });\n                this.setState({\n                  loading: false\n                });\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadingMrC() {\n        return _loadingMrC.apply(this, arguments);\n      }\n\n      return loadingMrC;\n    }()\n  }]);\n\n  function ShowPatientMrc(props) {\n    var _this;\n\n    _classCallCheck(this, ShowPatientMrc);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ShowPatientMrc).call(this, props));\n    _this.state = {\n      loading: true\n    };\n    _this.permissions = null;\n    return _this;\n  }\n\n  _createClass(ShowPatientMrc, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Error, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, this.state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 38\n        }\n      }, \"Loading...\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AddPrivateKey, {\n        parent: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Header, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          padding: '40px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        id: \"mrcOf\",\n        style: {\n          fontSize: \"20px\",\n          paddingLeft: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 22\n        }\n      }, \"MrC of \", this.state.patientAccount)), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(UploadEmr, {\n        parent: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Mrc, {\n        accountShow: this.patientAccount,\n        mrc: this.state.mrc,\n        accountKey: this.state.patientPrivateKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Foother, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return ShowPatientMrc;\n}(Component);\n\nfunction AddPrivateKey(props) {\n  var _this2 = this;\n\n  var _useState = useState(props.parent.state.showAddKey),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      privateKey = _useState4[0],\n      setPrivateKey = _useState4[1];\n\n  var handleChange = function handleChange(event) {\n    setPrivateKey(event.target.value);\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              event.preventDefault();\n              props.parent.setState({\n                patientPrivateKey: privateKey\n              });\n              saveToLocalStorage(_this2.state); // save to the storage\n\n              props.parent.setState({\n                loading: true\n              });\n              _context3.next = 6;\n              return props.parent.loadingMrC();\n\n            case 6:\n              // add state.mrc to loacl storage\n              props.parent.setState({\n                loading: false\n              });\n              setShow(false);\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: function onHide() {\n      return null;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Add private key\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    value: privateKey,\n    onChange: handleChange,\n    type: \"password\",\n    placeholder: \"Enter private key of this patient\",\n    required: true,\n    onInvalid: function onInvalid(event) {\n      return event.target.setCustomValidity(\"Private key is incorrect!\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Save Changes\")))));\n}\n\nfunction UploadEmr(props) {\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      show = _useState6[0],\n      setShow = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      emrTypeValue = _useState8[0],\n      setEmrTypeValue = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      keyType = _useState10[0],\n      setKeyType = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      keyStatus = _useState12[0],\n      setKeyStatus = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      prescriptions = _useState14[0],\n      setPrescriptions = _useState14[1];\n\n  var _useState15 = useState(\"VALID\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      emrStatusValue = _useState16[0],\n      setEmrStatusValue = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      file = _useState18[0],\n      setFile = _useState18[1];\n\n  var handleShow = function handleShow() {\n    setShow(true);\n  };\n\n  var handleSelectedEmrType = function handleSelectedEmrType(event) {\n    var key = event.toString().split(\",\")[0];\n    var value = event.toString().split(\",\")[1];\n    setEmrTypeValue(value);\n    setKeyType(key);\n\n    if (parseInt(key) === 2) {\n      setPrescriptions(true);\n    } else {\n      setPrescriptions(false);\n    }\n  };\n\n  var handleSelectedEmrStatus = function handleSelectedEmrStatus(event) {\n    var key = event.toString().split(\",\")[0];\n    var value = event.toString().split(\",\")[1];\n    setEmrStatusValue(value);\n    setKeyStatus(key);\n  };\n\n  var validateFileType = function validateFileType(event) {\n    var fileName = event.target.value;\n    var idxDot = fileName.lastIndexOf(\".\") + 1;\n    var extFile = fileName.substr(idxDot, fileName.length).toLowerCase();\n\n    if (extFile !== \"txt\") {\n      alert(\"Only txt file are allowed!\");\n      event.target.value = null;\n    } else {\n      setFile(event.target.files[0]);\n    }\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(event) {\n      var base64Data, details;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              event.preventDefault();\n              setShow(false);\n              _context4.next = 4;\n              return toBase64(file);\n\n            case 4:\n              base64Data = _context4.sent;\n              details = {\n                typeEmr: parseInt(keyType),\n                statuseEmr: parseInt(keyStatus),\n                time: new Date().toLocaleString(),\n                owner: props.parent.state.patientAccount,\n                writer: props.parent.state.account,\n                data: Encription.encrypt(base64Data, props.parent.state.patientPrivateKey)\n              }; // save in blockaing!!\n\n              props.parent.setState({\n                loading: true\n              });\n              _context4.next = 9;\n              return props.parent.state.permissions.methods.addEmr(details.owner, details.typeEmr, details.statuseEmr, details.time, details.data).send({\n                from: details.writer\n              }).once('error', function (error) {\n                props.parent.setState({\n                  hasError: true\n                });\n                console.log(error);\n              }).once('confirmation', function (confirmation) {\n                props.parent.setState({\n                  loading: false\n                });\n              });\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handleSubmit(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingLeft: \"40px\",\n      color: \"blue\"\n    },\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: IconUpload,\n    width: \"50px\",\n    height: \"50px\",\n    className: \"d-inline-block align-top\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, \"Add a new EMR\")), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: function onHide() {\n      return setShow(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, \"Add a new EMR\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    as: ButtonGroup,\n    onSelect: handleSelectedEmrType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"upEmrSelect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, \"EMR type\"), /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    split: true,\n    variant: \"upEmrSelectItems\",\n    id: \"emrType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item0\",\n    eventKey: \"0,LABORATORY TEST RESULTS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 23\n    }\n  }, \"LABORATORY TEST RESULTS\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item1\",\n    eventKey: \"1,REFERENCES\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 23\n    }\n  }, \"REFERENCES\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item2\",\n    eventKey: \"2,MEDICATIONS AND PRESCRIPTIONS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 23\n    }\n  }, \"MEDICATIONS AND PRESCRIPTIONS\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item3\",\n    eventKey: \"3,IMAGING TEST RESULTS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 23\n    }\n  }, \"IMAGING TEST RESULTS\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item4\",\n    eventKey: \"4,YOUR DIAGNOSES\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 23\n    }\n  }, \"YOUR DIAGNOSES\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item5\",\n    eventKey: \"5,YOUR SENSITIVITY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 23\n    }\n  }, \"YOUR SENSITIVITY\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item6\",\n    eventKey: \"6,THE VACCINES YOU DID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 23\n    }\n  }, \"THE VACCINES YOU DID\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item7\",\n    eventKey: \"7,MEDICAL RECOMMENDATIONS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 23\n    }\n  }, \"MEDICAL RECOMMENDATIONS\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item8\",\n    eventKey: \"8,CERTIFICATES OF ILLNESS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 23\n    }\n  }, \"CERTIFICATES OF ILLNESS\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item9\",\n    eventKey: \"9,MEDICAL INFORMATION SUMMARY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 23\n    }\n  }, \"MEDICAL INFORMATION SUMMARY\")), /*#__PURE__*/React.createElement(Form.Label, {\n    style: {\n      color: 'black',\n      paddingLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, emrTypeValue)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 26\n    }\n  }), prescriptions ? /*#__PURE__*/React.createElement(Dropdown, {\n    as: ButtonGroup,\n    onSelect: handleSelectedEmrStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"upEmrSelect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, \"EMR status\"), /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    split: true,\n    variant: \"upEmrSelectItems\",\n    id: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item0\",\n    eventKey: \"0,VALID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 23\n    }\n  }, \"VALID\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item1\",\n    eventKey: \"1,EXPIRED\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 23\n    }\n  }, \"EXPIRED\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item2\",\n    eventKey: \"2,BOUGHT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 23\n    }\n  }, \"BOUGHT\")), /*#__PURE__*/React.createElement(Form.Label, {\n    style: {\n      color: 'black',\n      paddingLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  }, emrStatusValue)) : null, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 21\n    }\n  }, prescriptions ? /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 40\n    }\n  }) : null, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }, \"Add file\"), /*#__PURE__*/React.createElement(Form.Control, {\n    id: \"emrFile\",\n    type: \"file\",\n    placeholder: \"Upload File\",\n    accept: \".txt\",\n    onChange: validateFileType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    variant: \"submit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, \"Add\"))));\n} // convet file to base64\n\n\nvar toBase64 = function toBase64(file) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function () {\n      return resolve(reader.result);\n    };\n\n    reader.onerror = function (error) {\n      return reject(error);\n    };\n  });\n};\n\nexport default ShowPatientMrc;","map":{"version":3,"sources":["C:/Users/shaii/Desktop/projects/MrC/src/components/ShowPatientMrc.js"],"names":["React","Component","useState","Foother","Header","Mrc","IconUpload","Error","Modal","Form","Dropdown","Button","ButtonGroup","Encription","loadState","saveToLocalStorage","loadWeb3","loadBlockchainData","ShowPatientMrc","console","log","state","oldState","setState","patientAccount","blockchain","undefined","permissions","showAddKey","loading","loadingMrC","methods","getMrc","call","from","account","mrc","props","padding","fontSize","paddingLeft","patientPrivateKey","AddPrivateKey","parent","show","setShow","privateKey","setPrivateKey","handleChange","event","target","value","handleSubmit","preventDefault","setCustomValidity","UploadEmr","emrTypeValue","setEmrTypeValue","keyType","setKeyType","keyStatus","setKeyStatus","prescriptions","setPrescriptions","emrStatusValue","setEmrStatusValue","file","setFile","handleShow","handleSelectedEmrType","key","toString","split","parseInt","handleSelectedEmrStatus","validateFileType","fileName","idxDot","lastIndexOf","extFile","substr","length","toLowerCase","alert","files","toBase64","base64Data","details","typeEmr","statuseEmr","time","Date","toLocaleString","owner","writer","data","encrypt","addEmr","send","once","error","hasError","confirmation","color","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport Foother from './Footer'\nimport Header from './Header'\nimport Mrc from './Mrc'\nimport IconUpload from '../images/icon_upload.png'\nimport Error from './Error'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport Button from 'react-bootstrap/Button'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport './ShowPatientMrc.css'\nimport Encription from '../Encription'\nimport {loadState, saveToLocalStorage} from '../storage'\nimport {loadWeb3, loadBlockchainData} from '../loadBlockchain'\n\n\nclass ShowPatientMrc extends Component {\n\n  async componentDidMount() {\n    console.log(this.state)\n    const oldState = loadState()\n    this.setState({patientAccount:oldState.patientAccount})\n    // loading blockchain \n    await loadWeb3()\n    const blockchain = await loadBlockchainData()\n    if(blockchain !== undefined ||blockchain !== null){\n      this.permissions = blockchain.permissions // save smart contruct\n       this.setState({showAddKey: true,loading:false})\n       saveToLocalStorage(this.state) // save to the storage\n       this.setState(loadState()) // load old state\n       await this.loadingMrC()\n       saveToLocalStorage(this.state) // save to the storage\n    }\n  }\n  async loadingMrC(){\n    // get the mrc of this patient\n    this.setState({loading:true})\n    const mrc = await this.state.permissions.methods.getMrc(this.state.patientAccount)\n    .call({from:this.state.account})\n    this.setState({mrc})\n    this.setState({loading:false})\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {\n          loading:true\n        }\n        this.permissions = null\n    }\n\n    render(){\n        return(\n            <>\n                <Error>\n                {\n                this.state.loading ? <div>Loading...</div> :\n                <>\n                <AddPrivateKey  parent ={this} />\n                <Header account={this.state.account} />\n                <div style={{padding:'40px'}}>\n                <div><b id=\"mrcOf\" style={{fontSize:\"20px\", paddingLeft:\"20px\" }}>MrC of {this.state.patientAccount}</b></div>\n                <br/>\n                <UploadEmr parent={this}/>\n                </div>\n              <Mrc  accountShow={this.patientAccount}   mrc= {this.state.mrc} accountKey={this.state.patientPrivateKey}/>\n            <br></br>\n            <Foother/>\n            </>\n            }\n            </Error>\n            </>\n        );\n    }\n}\n\nfunction AddPrivateKey(props) {\n  const [show, setShow] = useState(props.parent.state.showAddKey)\n  const [privateKey, setPrivateKey] = useState(\"\")\n  \n  const handleChange = (event) =>{\n    setPrivateKey(event.target.value)\n  }\n  const handleSubmit = async (event)=>{\n    event.preventDefault()\n    props.parent.setState({patientPrivateKey:privateKey})\n    saveToLocalStorage(this.state) // save to the storage\n    props.parent.setState({loading:true})\n    await props.parent.loadingMrC() // add state.mrc to loacl storage\n    props.parent.setState({loading:false})\n    setShow(false)\n  }\n  return (\n    <>\n    <Modal show={show} onHide={() => null} >\n        <Form onSubmit={handleSubmit}>\n        <Modal.Header>\n          <Modal.Title>Add private key</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <Form.Control value={privateKey} onChange={handleChange} type=\"password\" \n             placeholder=\"Enter private key of this patient\" required \n             onInvalid={(event) =>  event.target.setCustomValidity(\"Private key is incorrect!\")}/>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button type=\"submit\"  variant=\"primary\">\n            Save Changes\n          </Button>\n        </Modal.Footer>\n        </Form>\n      </Modal>\n    </>\n  );\n}\n\nfunction UploadEmr(props) {\n    const [show, setShow] = useState(false)\n    const [emrTypeValue, setEmrTypeValue] = useState(\"\")\n    const [keyType, setKeyType] = useState(0)\n    const [keyStatus, setKeyStatus] = useState(0)\n    const [prescriptions, setPrescriptions] = useState(false)\n    const [emrStatusValue,setEmrStatusValue] = useState(\"VALID\")\n    const [file, setFile] = useState(\"\")\n\n    const handleShow = () => {\n        setShow(true)\n    }\n    const handleSelectedEmrType = (event) => {\n        const key = event.toString().split(\",\")[0]\n        const value = event.toString().split(\",\")[1]\n        setEmrTypeValue(value)\n        setKeyType(key)\n        if(parseInt(key) === 2){\n            setPrescriptions(true)\n        }\n        else{\n            setPrescriptions(false)\n        }\n    }\n    const handleSelectedEmrStatus = (event) => {\n      const key = event.toString().split(\",\")[0] \n      const value = event.toString().split(\",\")[1]\n      setEmrStatusValue(value)\n      setKeyStatus(key)\n    }\n    const validateFileType = (event) => {\n        var fileName = event.target.value\n        var idxDot = fileName.lastIndexOf(\".\") + 1;\n        var extFile = fileName.substr(idxDot, fileName.length).toLowerCase();\n        if (extFile!==\"txt\"){\n            alert(\"Only txt file are allowed!\");\n            event.target.value = null\n        }\n        else{\n          setFile(event.target.files[0])\n        }\n    }\n    const handleSubmit = async (event) =>{\n      event.preventDefault()\n      setShow(false)\n      const base64Data = await toBase64(file)\n      const details = {\n          typeEmr: parseInt(keyType),\n          statuseEmr: parseInt(keyStatus),\n          time: new Date().toLocaleString(),\n          owner: props.parent.state.patientAccount,\n          writer: props.parent.state.account,\n          data: Encription.encrypt(base64Data,props.parent.state.patientPrivateKey) \n      }\n      // save in blockaing!!\n      props.parent.setState({ loading: true })\n      await props.parent.state.permissions.methods.addEmr(details.owner,\n            details.typeEmr,details.statuseEmr,details.time,\n            details.data)\n            .send({from: details.writer})\n            .once('error', (error) => {\n              props.parent.setState({ hasError: true })\n              console.log(error)\n            })\n            .once('confirmation', (confirmation) => {\n              props.parent.setState({ loading: false })\n            })\n    }\n    return (\n        <>\n        <div style={{paddingLeft:\"40px\",color:\"blue\"}} onClick={handleShow}>\n        <img src={IconUpload} width=\"50px\" height=\"50px\" className=\"d-inline-block align-top\" alt=\"\" />\n          <b>Add a new EMR</b>\n        </div>\n        <Modal show={show} onHide={() => setShow(false)} >\n            <Modal.Header closeButton>\n                <Modal.Title>Add a new EMR</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                  <Dropdown as={ButtonGroup} onSelect={handleSelectedEmrType} >\n                    <Button variant=\"upEmrSelect\">EMR type</Button>\n                    <Dropdown.Toggle split variant=\"upEmrSelectItems\" id=\"emrType\"  />\n                    <Dropdown.Menu >\n                      <Dropdown.Item id=\"item0\" eventKey=\"0,LABORATORY TEST RESULTS\" >LABORATORY TEST RESULTS</Dropdown.Item>\n                      <Dropdown.Item id=\"item1\" eventKey=\"1,REFERENCES\">REFERENCES</Dropdown.Item>\n                      <Dropdown.Item id=\"item2\"eventKey=\"2,MEDICATIONS AND PRESCRIPTIONS\">MEDICATIONS AND PRESCRIPTIONS</Dropdown.Item>\n                      <Dropdown.Item id=\"item3\" eventKey=\"3,IMAGING TEST RESULTS\">IMAGING TEST RESULTS</Dropdown.Item>\n                      <Dropdown.Item id=\"item4\" eventKey=\"4,YOUR DIAGNOSES\">YOUR DIAGNOSES</Dropdown.Item>\n                      <Dropdown.Item id=\"item5\" eventKey=\"5,YOUR SENSITIVITY\">YOUR SENSITIVITY</Dropdown.Item>\n                      <Dropdown.Item id=\"item6\" eventKey=\"6,THE VACCINES YOU DID\">THE VACCINES YOU DID</Dropdown.Item>\n                      <Dropdown.Item id=\"item7\" eventKey=\"7,MEDICAL RECOMMENDATIONS\" >MEDICAL RECOMMENDATIONS</Dropdown.Item>\n                      <Dropdown.Item id=\"item8\" eventKey=\"8,CERTIFICATES OF ILLNESS\">CERTIFICATES OF ILLNESS</Dropdown.Item>\n                      <Dropdown.Item id=\"item9\" eventKey=\"9,MEDICAL INFORMATION SUMMARY\">MEDICAL INFORMATION SUMMARY</Dropdown.Item>\n                    </Dropdown.Menu>\n                    <Form.Label  style={{color:'black', paddingLeft:\"10px\"}}>\n                    {emrTypeValue}</Form.Label>\n                    </Dropdown>\n                    <br/><br/>\n                    {\n                    prescriptions \n                    ?\n                    <Dropdown as={ButtonGroup} onSelect={handleSelectedEmrStatus} >\n                    <Button variant=\"upEmrSelect\">EMR status</Button>\n                    <Dropdown.Toggle split variant=\"upEmrSelectItems\" id=\"status\"  />\n                    <Dropdown.Menu >\n                      <Dropdown.Item id=\"item0\" eventKey=\"0,VALID\" >VALID</Dropdown.Item>\n                      <Dropdown.Item id=\"item1\" eventKey=\"1,EXPIRED\">EXPIRED</Dropdown.Item>\n                      <Dropdown.Item id=\"item2\"eventKey=\"2,BOUGHT\">BOUGHT</Dropdown.Item>\n                    </Dropdown.Menu>\n                    <Form.Label  style={{color:'black', paddingLeft:\"10px\"}}>\n                    {emrStatusValue}</Form.Label>\n                    </Dropdown>\n                    : null}\n                    <Form.Group>\n                      {prescriptions ? <br/> : null}\n                    <Form.Label>Add file</Form.Label>\n                      <Form.Control id=\"emrFile\" type=\"file\" placeholder=\"Upload File\" accept=\".txt\" onChange={validateFileType} />\n                    </Form.Group>\n            </Modal.Body>\n            <Modal.Footer>\n          <Button  type=\"button\"  variant=\"submit\" onClick={handleSubmit}>\n            Add\n          </Button>\n        </Modal.Footer>\n        </Modal>\n        </>\n    );\n}\n\n// convet file to base64\nconst toBase64 = file => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onload = () => resolve(reader.result);\n  reader.onerror = error => reject(error);\n});\n\nexport default ShowPatientMrc;"]},"metadata":{},"sourceType":"module"}