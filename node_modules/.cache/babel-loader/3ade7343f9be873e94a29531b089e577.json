{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\shaii\\\\Desktop\\\\projects\\\\MrC\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\shaii\\\\Desktop\\\\projects\\\\MrC\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shaii\\\\Desktop\\\\projects\\\\MrC\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shaii\\\\Desktop\\\\projects\\\\MrC\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shaii\\\\Desktop\\\\projects\\\\MrC\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\shaii\\\\Desktop\\\\projects\\\\MrC\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\shaii\\\\Desktop\\\\projects\\\\MrC\\\\src\\\\components\\\\ShowPatientMrc.js\";\nimport React, { Component, useState } from 'react';\nimport Foother from './Footer';\nimport Header from './Header';\nimport Mrc from './Mrc';\nimport IconUpload from '../images/icon_upload.png';\nimport Error from './Error';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button'; //import UploadEmr from './UploadEmr'\n//import { Link} from \"react-router-dom\";\n\nvar ShowPatientMrc = /*#__PURE__*/function (_Component) {\n  _inherits(ShowPatientMrc, _Component);\n\n  function ShowPatientMrc(props) {\n    var _this;\n\n    _classCallCheck(this, ShowPatientMrc);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ShowPatientMrc).call(this, props));\n    _this.state = {\n      account: localStorage.getItem('account'),\n      patientAccount: ''\n    };\n    return _this;\n  }\n\n  _createClass(ShowPatientMrc, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"main\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Error, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          padding: '40px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        id: \"mrcOf\",\n        style: {\n          fontSize: \"35px\",\n          paddingLeft: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 22\n        }\n      }, \"MrC of \", this.state.patientAccount)), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(UploadEmr, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Mrc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Foother, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return ShowPatientMrc;\n}(Component);\n\nfunction UploadEmr(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var _useState3 = useState(-1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      emrTypeValue = _useState4[0],\n      setEmrTypeValue = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      prescriptions = _useState6[0],\n      setPrescriptions = _useState6[1];\n\n  var _useState7 = useState(-1),\n      _useState8 = _slicedToArray(_useState7, 2),\n      emrStatusValue = _useState8[0],\n      setEmrStatusValue = _useState8[1];\n\n  var handleShow = function handleShow() {\n    setShow(true);\n    setState(\"\");\n  };\n\n  var handleSelectedEmrType = function handleSelectedEmrType(event) {\n    var number = event.toString().split(\",\")[0];\n    var value = event.toString().split(\",\")[1];\n    setEmrTypeValue(value);\n\n    if (number === 2) {\n      setPrescriptions(true);\n    } else {\n      setPrescriptions(false);\n    }\n  };\n\n  var handleSelectedEmrStatus = function handleSelectedEmrStatus(event) {\n    //const number = event.toString().split(\",\")[0]\n    var value = event.toString().split(\",\")[1];\n    setEmrStatusValue(value);\n  };\n\n  var validateFileType = function validateFileType(event) {\n    var fileName = event.target.value;\n    var idxDot = fileName.lastIndexOf(\".\") + 1;\n    var extFile = fileName.substr(idxDot, fileName.length).toLowerCase();\n\n    if (extFile !== \"pdf\") {\n      alert(\"Only pdf file are allowed!\");\n      event.target.value = null;\n    }\n  };\n\n  var handleSubmit = function handleSubmit() {\n    console.log(\"ss\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingLeft: \"40px\"\n    },\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: IconUpload,\n    width: \"50px\",\n    height: \"50px\",\n    class: \"d-inline-block align-top\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Add a new EMR\")), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: function onHide() {\n      return setShow(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"Add a new EMR\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    id: \"emrId\",\n    type: \"text\",\n    placeholder: \"Enter ID\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Dropdown, {\n    as: ButtonGroup,\n    onSelect: handleSelectedEmrType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"upEmrSelect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"EMR type\"), /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    split: true,\n    variant: \"upEmrSelectItems\",\n    id: \"emrType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item0\",\n    eventKey: \"0,LABORATORY TEST RESULTS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 23\n    }\n  }, \"LABORATORY TEST RESULTS\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item1\",\n    eventKey: \"1,REFERENCES\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 23\n    }\n  }, \"REFERENCES\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item2\",\n    eventKey: \"2,MEDICATIONS AND PRESCRIPTIONS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 23\n    }\n  }, \"MEDICATIONS AND PRESCRIPTIONS\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item3\",\n    eventKey: \"3,IMAGING TEST RESULTS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 23\n    }\n  }, \"IMAGING TEST RESULTS\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item4\",\n    eventKey: \"4,YOUR DIAGNOSES\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 23\n    }\n  }, \"YOUR DIAGNOSES\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item5\",\n    eventKey: \"5,YOUR SENSITIVITY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 23\n    }\n  }, \"YOUR SENSITIVITY\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item6\",\n    eventKey: \"6,THE VACCINES YOU DID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 23\n    }\n  }, \"THE VACCINES YOU DID\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item7\",\n    eventKey: \"7,MEDICAL RECOMMENDATIONS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 23\n    }\n  }, \"MEDICAL RECOMMENDATIONS\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item8\",\n    eventKey: \"8,CERTIFICATES OF ILLNESS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 23\n    }\n  }, \"CERTIFICATES OF ILLNESS\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item9\",\n    eventKey: \"9,MEDICAL INFORMATION SUMMARY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 23\n    }\n  }, \"MEDICAL INFORMATION SUMMARY\")), /*#__PURE__*/React.createElement(Form.Label, {\n    style: {\n      color: 'black',\n      paddingLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, emrTypeValue)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 26\n    }\n  }), prescriptions ? /*#__PURE__*/React.createElement(Dropdown, {\n    as: ButtonGroup,\n    onSelect: handleSelectedEmrStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"upEmrSelect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, \"EMR status\"), /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    split: true,\n    variant: \"upEmrSelectItems\",\n    id: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item0\",\n    eventKey: \"0,VALID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 23\n    }\n  }, \"VALID\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item1\",\n    eventKey: \"1,EXPIRED\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 23\n    }\n  }, \"EXPIRED\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    id: \"item2\",\n    eventKey: \"2,BOUGHT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 23\n    }\n  }, \"BOUGHT\")), /*#__PURE__*/React.createElement(Form.Label, {\n    style: {\n      color: 'black',\n      paddingLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, emrStatusValue)) : null, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, prescriptions ? /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 40\n    }\n  }) : null, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, \"Add file\"), /*#__PURE__*/React.createElement(Form.Control, {\n    id: \"emrFile\",\n    type: \"file\",\n    placeholder: \"Upload File\",\n    accept: \".pdf\",\n    onChange: validateFileType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, \"Add\")))));\n}\n\nexport default ShowPatientMrc;","map":{"version":3,"sources":["C:/Users/shaii/Desktop/projects/MrC/src/components/ShowPatientMrc.js"],"names":["React","Component","useState","Foother","Header","Mrc","IconUpload","Error","Modal","Form","Dropdown","Button","ShowPatientMrc","props","state","account","localStorage","getItem","patientAccount","padding","fontSize","paddingLeft","UploadEmr","show","setShow","emrTypeValue","setEmrTypeValue","prescriptions","setPrescriptions","emrStatusValue","setEmrStatusValue","handleShow","setState","handleSelectedEmrType","event","number","toString","split","value","handleSelectedEmrStatus","validateFileType","fileName","target","idxDot","lastIndexOf","extFile","substr","length","toLowerCase","alert","handleSubmit","console","log","ButtonGroup","color"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport Foother from './Footer'\nimport Header from './Header'\nimport Mrc from './Mrc'\nimport IconUpload from '../images/icon_upload.png'\nimport Error from './Error'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport Button from 'react-bootstrap/Button'\n\n//import UploadEmr from './UploadEmr'\n//import { Link} from \"react-router-dom\";\n\nclass ShowPatientMrc extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            account: localStorage.getItem('account'),\n            patientAccount: ''\n        }\n    }\n\n    render(){\n        return(\n            <main>\n                <Error>\n                <Header account={this.state.account} />\n                <div style={{padding:'40px'}}>\n                <div><b id=\"mrcOf\" style={{fontSize:\"35px\", paddingLeft:\"20px\" }}>MrC of {this.state.patientAccount}</b></div>\n                <br/>\n                <UploadEmr/>\n                </div>\n              <Mrc />\n            <br></br>\n            <Foother/>\n            </Error>\n            </main>\n        );\n    }\n}\n\n\nfunction UploadEmr(props) {\n    const [show, setShow] = useState(false)\n    const [emrTypeValue, setEmrTypeValue] = useState(-1)\n    const [prescriptions, setPrescriptions] = useState(false)\n    const [emrStatusValue,setEmrStatusValue] = useState(-1)\n    const handleShow = () => {\n        setShow(true)\n        setState(\"\")\n    }\n    const handleSelectedEmrType = (event) => {\n        const number = event.toString().split(\",\")[0]\n        const value = event.toString().split(\",\")[1]\n        setEmrTypeValue(value)\n        if(number ===2){\n            setPrescriptions(true)\n        }\n        else{\n            setPrescriptions(false)\n        }\n     \n    }\n    const handleSelectedEmrStatus = (event) => {\n        //const number = event.toString().split(\",\")[0]\n        const value = event.toString().split(\",\")[1]\n        setEmrStatusValue(value)\n      }\n    const validateFileType = (event) => {\n        var fileName = event.target.value\n        var idxDot = fileName.lastIndexOf(\".\") + 1;\n        var extFile = fileName.substr(idxDot, fileName.length).toLowerCase();\n        if (extFile!==\"pdf\"){\n            alert(\"Only pdf file are allowed!\");\n            event.target.value = null\n        }   \n    }\n\n    const handleSubmit = () =>{\n        console.log(\"ss\")\n    }\n\n    return (\n        <>\n        <div style={{paddingLeft:\"40px\"}} onClick={handleShow}>\n        <img src={IconUpload} width=\"50px\" height=\"50px\" class=\"d-inline-block align-top\" alt=\"\" />\n          <b>Add a new EMR</b>\n        </div>\n        <Modal show={show} onHide={() => setShow(false)} >\n        <Form onSubmit={handleSubmit}>\n            <Modal.Header closeButton>\n                <Modal.Title>Add a new EMR</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form.Group controlId=\"formID\">\n                  <Form.Label>Address</Form.Label>\n                  <Form.Control id=\"emrId\"type=\"text\" placeholder=\"Enter ID\" required/>\n                  </Form.Group>\n                  <Dropdown as={ButtonGroup} onSelect={handleSelectedEmrType} >\n                    <Button variant=\"upEmrSelect\">EMR type</Button>\n                    <Dropdown.Toggle split variant=\"upEmrSelectItems\" id=\"emrType\"  />\n                    <Dropdown.Menu >\n                      <Dropdown.Item id=\"item0\" eventKey=\"0,LABORATORY TEST RESULTS\" >LABORATORY TEST RESULTS</Dropdown.Item>\n                      <Dropdown.Item id=\"item1\" eventKey=\"1,REFERENCES\">REFERENCES</Dropdown.Item>\n                      <Dropdown.Item id=\"item2\"eventKey=\"2,MEDICATIONS AND PRESCRIPTIONS\">MEDICATIONS AND PRESCRIPTIONS</Dropdown.Item>\n                      <Dropdown.Item id=\"item3\" eventKey=\"3,IMAGING TEST RESULTS\">IMAGING TEST RESULTS</Dropdown.Item>\n                      <Dropdown.Item id=\"item4\" eventKey=\"4,YOUR DIAGNOSES\">YOUR DIAGNOSES</Dropdown.Item>\n                      <Dropdown.Item id=\"item5\" eventKey=\"5,YOUR SENSITIVITY\">YOUR SENSITIVITY</Dropdown.Item>\n                      <Dropdown.Item id=\"item6\" eventKey=\"6,THE VACCINES YOU DID\">THE VACCINES YOU DID</Dropdown.Item>\n                      <Dropdown.Item id=\"item7\" eventKey=\"7,MEDICAL RECOMMENDATIONS\" >MEDICAL RECOMMENDATIONS</Dropdown.Item>\n                      <Dropdown.Item id=\"item8\" eventKey=\"8,CERTIFICATES OF ILLNESS\">CERTIFICATES OF ILLNESS</Dropdown.Item>\n                      <Dropdown.Item id=\"item9\" eventKey=\"9,MEDICAL INFORMATION SUMMARY\">MEDICAL INFORMATION SUMMARY</Dropdown.Item>\n                    </Dropdown.Menu>\n                    <Form.Label  style={{color:'black', paddingLeft:\"10px\"}}>\n                    {emrTypeValue}</Form.Label>\n                    </Dropdown>\n                    <br/><br/>\n                    {\n                    prescriptions \n                    ?\n                    <Dropdown as={ButtonGroup} onSelect={handleSelectedEmrStatus} >\n                    <Button variant=\"upEmrSelect\">EMR status</Button>\n                    <Dropdown.Toggle split variant=\"upEmrSelectItems\" id=\"status\"  />\n                    <Dropdown.Menu >\n                      <Dropdown.Item id=\"item0\" eventKey=\"0,VALID\" >VALID</Dropdown.Item>\n                      <Dropdown.Item id=\"item1\" eventKey=\"1,EXPIRED\">EXPIRED</Dropdown.Item>\n                      <Dropdown.Item id=\"item2\"eventKey=\"2,BOUGHT\">BOUGHT</Dropdown.Item>\n                    </Dropdown.Menu>\n                    <Form.Label  style={{color:'black', paddingLeft:\"10px\"}}>\n                    {emrStatusValue}</Form.Label>\n                    </Dropdown>\n                    : null}\n                    <Form.Group>\n                      {prescriptions ? <br/> : null}\n                    <Form.Label>Add file</Form.Label>\n                      <Form.Control id=\"emrFile\" type=\"file\" placeholder=\"Upload File\" accept=\".pdf\" onChange={validateFileType} />\n                    </Form.Group>\n            </Modal.Body>\n            <Modal.Footer>\n          <Button type=\"submit\"  variant=\"primary\">\n            Add\n          </Button>\n        </Modal.Footer>\n        </Form>\n        </Modal>\n        </>\n    );\n}\n\n\n\nexport default ShowPatientMrc;"]},"metadata":{},"sourceType":"module"}