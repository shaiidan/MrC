{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _mapContextToProps = _interopRequireDefault(require(\"react-context-toolbox/mapContextToProps\"));\n\nvar _createChainedFunction = _interopRequireDefault(require(\"./utils/createChainedFunction\"));\n\nvar _SafeAnchor = _interopRequireDefault(require(\"./SafeAnchor\"));\n\nvar _SelectableContext = _interopRequireWildcard(require(\"./SelectableContext\"));\n\nvar _ThemeProvider = require(\"./ThemeProvider\");\n\nvar _NavContext = _interopRequireDefault(require(\"./NavContext\"));\n\nvar DropdownItem = /*#__PURE__*/function (_React$Component) {\n  (0, _inheritsLoose2.default)(DropdownItem, _React$Component);\n\n  function DropdownItem() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handleClick = function (event) {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          onSelect = _this$props.onSelect,\n          onClick = _this$props.onClick,\n          eventKey = _this$props.eventKey,\n          href = _this$props.href;\n      var key = (0, _SelectableContext.makeEventKey)(eventKey, href); // SafeAnchor handles the disabled case, but be handle it here\n      // for other components\n\n      if (disabled) return;\n      if (onClick) onClick(event);\n      if (onSelect) onSelect(key, event);\n      if (key !== null && _this.contextSelect) _this.contextSelect(key, event);\n    };\n\n    return _this;\n  }\n\n  var _proto = DropdownItem.prototype;\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        bsPrefix = _this$props2.bsPrefix,\n        active = _this$props2.active,\n        className = _this$props2.className,\n        children = _this$props2.children,\n        _ = _this$props2.eventKey,\n        _1 = _this$props2.onSelect,\n        Component = _this$props2.as,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props2, [\"bsPrefix\", \"active\", \"className\", \"children\", \"eventKey\", \"onSelect\", \"as\"]);\n    return _react.default.createElement(Component, (0, _extends2.default)({}, props, {\n      className: (0, _classnames.default)(className, bsPrefix, active && 'active', props.disabled && 'disabled'),\n      onClick: this.handleClick\n    }), children);\n  };\n\n  return DropdownItem;\n}(_react.default.Component);\n\nDropdownItem.defaultProps = {\n  as: _SafeAnchor.default,\n  disabled: false\n};\n\nvar _default = (0, _mapContextToProps.default)([_SelectableContext.default, _NavContext.default], function (onSelect, navContext, props) {\n  var _ref = navContext || {},\n      activeKey = _ref.activeKey;\n\n  var key = (0, _SelectableContext.makeEventKey)(props.eventKey, props.href);\n  return {\n    onSelect: (0, _createChainedFunction.default)(props.onSelect, onSelect),\n    active: props.active == null && key != null ? (0, _SelectableContext.makeEventKey)(activeKey) === key : props.active\n  };\n}, (0, _ThemeProvider.createBootstrapComponent)(DropdownItem, 'dropdown-item'));\n\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}