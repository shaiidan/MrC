{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\shaii\\\\Desktop\\\\projects\\\\MrC\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shaii\\\\Desktop\\\\projects\\\\MrC\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport CryptoJS from 'crypto-js';\n\nvar Encription = /*#__PURE__*/function () {\n  function Encription() {\n    _classCallCheck(this, Encription);\n  }\n\n  _createClass(Encription, null, [{\n    key: \"encrypt\",\n    value: function encrypt(message, key) {\n      if (key == '') {\n        var messageEncrypt = CryptoJS.AES.encrypt(message, key);\n        return messageEncrypt.toString();\n      }\n    }\n  }, {\n    key: \"decrypt\",\n    value: function decrypt(message, key) {\n      var code = CryptoJS.AES.decrypt(message, key);\n      var decryptedMessage = code.toString(CryptoJS.enc.Utf8);\n      return decryptedMessage;\n    }\n  }]);\n\n  return Encription;\n}();\n\nexport default Encription;","map":{"version":3,"sources":["C:/Users/shaii/Desktop/projects/MrC/src/Encription.js"],"names":["CryptoJS","Encription","message","key","messageEncrypt","AES","encrypt","toString","code","decrypt","decryptedMessage","enc","Utf8"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,WAArB;;IAEMC,U;;;;;;;4BACaC,O,EAASC,G,EAAI;AACxB,UAAGA,GAAG,IAAI,EAAV,EAAa;AACT,YAAIC,cAAc,GAAGJ,QAAQ,CAACK,GAAT,CAAaC,OAAb,CAAqBJ,OAArB,EAA8BC,GAA9B,CAArB;AACJ,eAAOC,cAAc,CAACG,QAAf,EAAP;AACC;AACJ;;;4BACcL,O,EAASC,G,EAAI;AACxB,UAAIK,IAAI,GAAGR,QAAQ,CAACK,GAAT,CAAaI,OAAb,CAAqBP,OAArB,EAA8BC,GAA9B,CAAX;AACA,UAAIO,gBAAgB,GAAGF,IAAI,CAACD,QAAL,CAAcP,QAAQ,CAACW,GAAT,CAAaC,IAA3B,CAAvB;AACA,aAAOF,gBAAP;AACH;;;;;;AAEL,eAAeT,UAAf","sourcesContent":["import CryptoJS from 'crypto-js'\r\n\r\nclass Encription{\r\n    static encrypt(message, key){\r\n        if(key == ''){\r\n            var messageEncrypt = CryptoJS.AES.encrypt(message, key);\r\n        return messageEncrypt.toString();\r\n        }\r\n    }\r\n    static decrypt(message, key){\r\n        var code = CryptoJS.AES.decrypt(message, key);\r\n        var decryptedMessage = code.toString(CryptoJS.enc.Utf8);\r\n        return decryptedMessage;\r\n    }\r\n}\r\nexport default Encription;"]},"metadata":{},"sourceType":"module"}